CREATE DATABASE EMPLOYEE_PAYROLL;

USE EMPLOYEE_PAYROLL;

DROP TABLE IF EXISTS T01;
DROP TABLE IF EXISTS T02;
DROP TABLE IF EXISTS T03;
DROP TABLE IF EXISTS T04;

-- Department
CREATE TABLE T02
(
	T02F01 INT PRIMARY KEY, -- dept_id
    T02F02 VARCHAR(50) NOT NULL -- dept_name
);

-- Employees
CREATE TABLE T01
(
	T01F01 INT PRIMARY KEY, -- emp_id
    T01F02 VARCHAR(50) NOT NULL, -- name
    T01F03 INT, -- dept_id
    T01F04 DECIMAL(8,2) NOT NULL, -- salary
    CONSTRAINT FK_T01F03 FOREIGN KEY (T01F03) REFERENCES T02(T02F01),
    CONSTRAINT CHECK_T01F04 CHECK (T01F04 > 0)
);

-- Salaries
CREATE TABLE T03
(
	T03F01 INT, -- emp_id
    T03F02 DATE DEFAULT (CURDATE()), -- date
    T03F03 DECIMAL(8, 2) NOT NULL, -- amount
    CONSTRAINT FK_T03F01 FOREIGN KEY (T03F01) REFERENCES T01(T01F01),
    CONSTRAINT CHECK_T03F03 CHECK(T03F03 > 0)
);

-- salary_insert_log
CREATE TABLE T04
(
	T04F01 INT, -- emp_id
    T04F02 TIMESTAMP DEFAULT (NOW()), -- insert_on
    T04F03 DECIMAL(8, 2) NOT NULL, -- last_amount
    CONSTRAINT FK_T04F01 FOREIGN KEY (T04F01) REFERENCES T01(T01F01),
    CONSTRAINT CHECK_T04F03 CHECK (T04F03 > 0)
);

INSERT INTO T02 (T02F01, T02F02) VALUES
(1, 'Human Resources'),
(2, 'Engineering'),
(3, 'Sales'),
(4, 'Marketing'),
(5, 'Finance');

INSERT INTO T01 (T01F01, T01F02, T01F03, T01F04) VALUES
(101, 'Alice', 2, 90000.00),
(102, 'Bob', 2, 80000.00),
(103, 'Charlie', 3, 75000.00),
(104, 'David', 1, 60000.00),
(105, 'Eve', 4, 85000.00),
(106, 'Frank', NULL, 50000.00),
(107, 'Grace', 2, 95000.00);

INSERT INTO T03 (T03F01, T03F02, T03F03) VALUES
(101, '2024-01-01', 90000.00),
(101, '2024-02-01', 90000.00),
(101, '2024-03-01', 90000.00),
(102, '2024-01-01', 80000.00),
(102, '2024-02-01', 80000.00),
(103, '2024-01-01', 75000.00),
(104, '2024-01-01', 60000.00),
(104, '2024-02-01', 60000.00),
(107, '2024-03-01', 95000.00);

-- 1. Find all employee and their department name
SELECT 
	T01F01,
    T01F02,
    COALESCE(T02F02, "No department assigned")
FROM
	T01
    LEFT JOIN T02 ON T01F03 = T02F01;

-- 2. List all departments and the number of employees in each.
SELECT
	T02F01,
    T02F02,
    COUNT(T01F03)
FROM 
	T02
    INNER JOIN T01 ON T01F03 = T02F01
GROUP BY
	T02F01,
    T02F02;
    
-- 3. Find employees who have not received any salary payments.
SELECT
	T01F01,
    T01F02
FROM
	T01
    LEFT JOIN T03 ON T01F01 = T03F01
WHERE 
	T03F01 IS NULL;
    
-- 4. Calculate the total salary paid out by each department in January 2024.
SELECT 
	T02F01,
    T02F02,
	SUM(T03F03)
FROM 
	T01
    INNER JOIN T02 ON T01F03 = T02F01
    INNER JOIN T03 ON T01F01 = T03F01
WHERE 
	T03F02 BETWEEN "2024-01-01" AND "2024-01-31"
GROUP BY
	T02F01,
    T02F02;
    
-- 5. Find employees who earn more than the average salary of all employees.
SELECT
	T01F01,
    T01F02,
    T01F04
FROM 
	T01
WHERE
	T01F04 > (SELECT AVG(T01F04) FROM T01);
    
-- 6. Subquery to find employees earning above department average.
SELECT 
	T01F01,
    T01F02,
    T02F02,
    T01F04
FROM
	T01 AS E1
    INNER JOIN T02 ON T01F03 = T02F01
WHERE
	T01F04 > (SELECT AVG(T01F04) FROM T01 AS E2 WHERE E1.T01F03 = E2.T01F03);

-- 7. Find the employee with the highest salary in each department.
SELECT
	T01F01,
    T01F02,
    T02F02
FROM
	T01
    INNER JOIN T02 ON T01F03 = T02F01
WHERE
	(T01F03, T01F04) IN (SELECT T01F03, MAX(T01F04) FROM T01 GROUP BY T01F03);


-- SP to calculate yearly salary.
DROP PROCEDURE IF EXISTS CALCULATE_YEARLY_SALARY;

DELIMITER $$
CREATE PROCEDURE CALCULATE_YEARLY_SALARY(p_employee_id INT)
BEGIN
    SELECT 
		T01F04 * 12
	FROM
		T01 
	WHERE 
		T01F01 = p_employee_id 
	LIMIT 
		1;
END$$
DELIMITER ;

CALL CALCULATE_YEARLY_SALARY(101);


-- Trigger to auto-log salary insertions.
DELIMITER $$
CREATE TRIGGER AFTER_SALARY_INSERT
AFTER INSERT ON T03
FOR EACH ROW
BEGIN
	INSERT INTO T04(T04F01, T04F03) VALUES
    (NEW.T03F01, NEW.T03F03);
END$$
DELIMITER ;

INSERT INTO T03 (T03F01, T03F02, T03F03) VALUES
(101, '2024-04-01', 90000.00);
SELECT * FROM T04;



-- Create a view for employee salary summary.
CREATE OR REPLACE VIEW EMPLOYEE_SALARY_SUMMARY AS SELECT 
	T01F01,
    T01F02,
    T02F02,
    T01F04,
    COALESCE(SUM(T03F03), 0),
    COUNT(T03F03)
FROM 
	T01
    LEFT JOIN T02 ON T01F03 = T02F01
    LEFT JOIN T03 ON T01F01 = T03F01
GROUP BY
	T01F01,
    T01F02,
    T02F02,
    T01F04;

SELECT * FROM EMPLOYEE_SALARY_SUMMARY;

CREATE DATABASE EMPLOYEE_PAYROLL_COPY;
USE EMPLOYEE_PAYROLL_COPY;
SELECT * FROM T01;

DROP DATABASE STUDENTDB_COPY;